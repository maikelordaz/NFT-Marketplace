{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0xa010bcc73b8d83fa4343e3c520e1eb781127ef52062d63f8ab44d38ce5dbbf3b",
      "kind": "uups"
    },
    {
      "address": "0x5302E909d1e93e30F05B5D6Eea766363D14F9892",
      "txHash": "0x66bcdf0c0d359e6c7006b01e4dc4967b8f4b9ca4260f37fcb53f12141fa9a7e7",
      "kind": "uups"
    },
    {
      "address": "0xFD6F7A6a5c21A3f503EBaE7a473639974379c351",
      "txHash": "0x6ab0a7af45146ca07804fd0e198c0030e9e9d1319012c9057e8e8a24421622ce",
      "kind": "uups"
    }
  ],
  "impls": {
    "7ec88253a8f5ad051a983829c45f46512fb006c16715c56985d92d35a201197b": {
      "address": "0x6C2d83262fF84cBaDb3e416D527403135D757892",
      "txHash": "0x8bc2ad607c7938f0defca00c6038ca6d3ac480bef7010195f6d8fef20a86935f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "DAItoken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC20Upgradeable)2142",
            "contract": "NFTMarket1155",
            "src": "contracts\\NFTMarket1155_V1.sol:24"
          },
          {
            "label": "LINKtoken",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)2142",
            "contract": "NFTMarket1155",
            "src": "contracts\\NFTMarket1155_V1.sol:25"
          },
          {
            "label": "ETHpricefeed",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "NFTMarket1155",
            "src": "contracts\\NFTMarket1155_V1.sol:26"
          },
          {
            "label": "DAIpricefeed",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "NFTMarket1155",
            "src": "contracts\\NFTMarket1155_V1.sol:27"
          },
          {
            "label": "LINKpricefeed",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "NFTMarket1155",
            "src": "contracts\\NFTMarket1155_V1.sol:28"
          },
          {
            "label": "_listId",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "NFTMarket1155",
            "src": "contracts\\NFTMarket1155_V1.sol:29"
          },
          {
            "label": "_idToNFTitem",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(NFTitem)2593_storage)",
            "contract": "NFTMarket1155",
            "src": "contracts\\NFTMarket1155_V1.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_contract(IERC20Upgradeable)2142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_uint256,t_struct(NFTitem)2593_storage)": {
            "label": "mapping(uint256 => struct NFTMarket1155.NFTitem)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(NFTitem)2593_storage": {
            "label": "struct NFTMarket1155.NFTitem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256"
              },
              {
                "label": "NFTprice",
                "type": "t_uint256"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "NFTowner",
                "type": "t_address"
              },
              {
                "label": "sold",
                "type": "t_bool"
              },
              {
                "label": "cancelled",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    }
  }
}
